#!/bin/bash

# Copyright 2014 Treode, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build and test a pull request.
#
# This script works with the Jenkins service. Jenkins triggers the build whenever there is a new
# pull request on GitHub, or a change on an existing pull request. Jenkins runs this script, and
# then it marks the pull request with success/failure.
#
# Specifically, this script
# 1) Builds and tests the libraries for the Treode store.
# 2) Publishes those libraries locally.
# 3) Builds and tests the examples using the locally published libraries.

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. $DIR/scripts/build-functions.sh

clean

#
# Compile.
#

# Compile, and also publish locally for the examples below.
echo-do ${SBT} +test:compile +publish-local

# Twitter Server is available for Scala 2.10 only.
echo-do ${SBT} ++${SCALA_2_10} twitter-server/test:compile twitter-server/publish-local

# Skeleton examples.
(cd examples/finagle; echo-do ${SBT} test:compile); expect-status 0
(cd examples/finatra; echo-do ${SBT} test:compile); expect-status 0
(cd examples/unfiltered; echo-do ${SBT} test:compile); expect-status 0

# Movies example; it has multiple components.
(cd examples/movies; echo-do ${SBT} test:compile); expect-status 0
(cd examples/movies/webui; echo-do ${NPM} install --save); expect-status 0
(cd examples/movies/webui; echo-do ${GRUNT} dist); expect-status 0

#
# Test
#

echo-do ${SBT} ++${SCALA_2_11} test intensive:test
echo-do ${SBT} ++${SCALA_2_10} twitter-server/test

(cd examples/finagle; echo-do ${SBT} test); expect-status 0
(cd examples/finatra; echo-do ${SBT} test); expect-status 0
(cd examples/unfiltered; echo-do ${SBT} test); expect-status 0
(cd examples/movies; echo-do ${SBT} test); expect-status 0

#
# Done.
#

wrapup
